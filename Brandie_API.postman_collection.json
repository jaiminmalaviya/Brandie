{
  "info": {
    "name": "Brandie API",
    "description": "Complete API collection for Brandie social media platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "postId",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "    }",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('userId', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"name\": \"John Doe\",\n  \"username\": \"johndoe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "    }",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('userId', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with existing user credentials"
          }
        },
        {
          "name": "Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user's profile"
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"bio\": \"Updated bio description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            },
            "description": "Update current user's profile information"
          }
        }
      ],
      "description": "Authentication related endpoints"
    },
    {
      "name": "Posts",
      "item": [
        {
          "name": "Create Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.id) {",
                  "        pm.collectionVariables.set('postId', response.data.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"This is my first post on Brandie! ðŸš€\",\n  \"mediaUrl\": \"https://example.com/image.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Create a new post"
          }
        },
        {
          "name": "Get Public Timeline",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts?limit=20&skip=0",
              "host": ["{{baseUrl}}"],
              "path": ["posts"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of posts to retrieve (max 100)"
                },
                {
                  "key": "skip",
                  "value": "0",
                  "description": "Number of posts to skip for pagination"
                }
              ]
            },
            "description": "Get public timeline with all posts"
          }
        },
        {
          "name": "Get Single Post",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}"]
            },
            "description": "Get a single post by ID"
          }
        },
        {
          "name": "Delete Post",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}"]
            },
            "description": "Delete a post (author only)"
          }
        },
        {
          "name": "Like Post",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}", "like"]
            },
            "description": "Like a post"
          }
        },
        {
          "name": "Unlike Post",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}", "like"]
            },
            "description": "Unlike a post"
          }
        },
        {
          "name": "Get Post Likes",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/{{postId}}/likes?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["posts", "{{postId}}", "likes"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of likes to retrieve (max 100)"
                }
              ]
            },
            "description": "Get all likes for a specific post"
          }
        }
      ],
      "description": "Post management endpoints"
    },
    {
      "name": "Feed",
      "item": [
        {
          "name": "Get Personalized Feed",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/feed?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["feed"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of posts to retrieve (max 100)"
                }
              ]
            },
            "description": "Get personalized feed for authenticated user"
          }
        }
      ],
      "description": "User feed endpoints"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Search Users",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/search?q=john&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["users", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "john",
                  "description": "Search query for username or name"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of users to return (max 50)"
                }
              ]
            },
            "description": "Search for users by username or name"
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            },
            "description": "Get user profile by ID"
          }
        },
        {
          "name": "Follow User",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/follow",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "follow"]
            },
            "description": "Follow a user"
          }
        },
        {
          "name": "Unfollow User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/follow",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "follow"]
            },
            "description": "Unfollow a user"
          }
        },
        {
          "name": "Get Follow Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/follow-status",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "follow-status"]
            },
            "description": "Check if current user is following the specified user"
          }
        },
        {
          "name": "Get User Followers",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/followers?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "followers"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of followers to retrieve (max 100)"
                }
              ]
            },
            "description": "Get user's followers"
          }
        },
        {
          "name": "Get User Following",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/following?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "following"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of following to retrieve (max 100)"
                }
              ]
            },
            "description": "Get users that this user is following"
          }
        },
        {
          "name": "Get User Posts",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/posts?limit=20",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "posts"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of posts to retrieve (max 100)"
                }
              ]
            },
            "description": "Get posts by a specific user"
          }
        }
      ],
      "description": "User management and social features"
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/../health",
              "host": ["{{baseUrl}}"],
              "path": ["..", "health"]
            },
            "description": "Check if the API is running"
          }
        }
      ],
      "description": "System health endpoints"
    }
  ]
}
